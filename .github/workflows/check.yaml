name: ‚úÖ PR Checks
on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main

jobs:
  check-code:
    name: Check Code
    # Do not create release for merged dependabot or Snyk PRs
    #if: ${{ !contains(fromJson('["dependabot[bot]", "snyk-bot"]'), github.event.head_commit.author.name) && github.event.pull_request.merged == true &&  }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        id: pnpm-cache-setup
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      #- name: Derive appropriate SHAs for base and head for `nx affected` commands
      #  uses: nrwl/nx-set-shas@v3

      #- run: |
      #    echo "BASE: ${{ env.NX_BASE }}"
      #    echo "HEAD: ${{ env.NX_HEAD }}"

      - name: Track main branch
        run: git branch --track main origin/main

      - name: Check formatting
        run: pnpm nx format:check --all

      - name: üß™ Lint, build and test affected projects
        run: pnpm nx affected --base=origin/main --target=lint,build,test --parallel=5

  #security_vulnerabilities:
  #    name: üê© Snyk (Security vulnerabilities)
  #    runs-on: ubuntu-latest
  #    steps:
  #      - uses: actions/checkout@v3
  #      - uses: actions/setup-node@v3
  #        with:
  #          node-version: ${{ env.NODE_VERSION }}
  #          cache: 'npm'
  #      - uses: snyk/actions/setup@master
  #      - name: Install dependencies
  #        run: npm ci
  #      - name: Authenticator
  #        run: snyk auth ${{ secrets.SNYK_TOKEN }}
  #      - name: Test dependencies for known issues
  #        run: snyk test --fail-on=all --severity-threshold=high
  #        env:
  #          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  #      - name: Continuously monitor new vulnerabilities
  #        if: inputs.snyk-monitor
  #        run: snyk monitor
  #        env:
  #          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
#
#  code_ql:
#    name: üõ°Ô∏è CodeQL
#    runs-on: ubuntu-latest
#    permissions:
#      actions: read
#      contents: read
#      security-events: write
#
#    strategy:
#      fail-fast: false
#      matrix:
#        language: ['javascript']
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v2
#
#      - name: Initialize CodeQL
#        uses: github/codeql-action/init@v2
#        with:
#          languages: ${{ matrix.language }}
#      - name: Autobuild
#        uses: github/codeql-action/autobuild@v2
#
#      - name: Perform CodeQL Analysis
#        uses: github/codeql-action/analyze@v2
